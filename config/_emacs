
(add-to-list 'load-path "~/.emacs.d/")
(add-to-list 'load-path "~/.emacs.d/utils/")
(add-to-list 'load-path "~/.emacs.d/utils/apel-10.8/")
(add-to-list 'load-path "~/.emacs.d/utils/elscreen/")
(add-to-list 'load-path "~/.emacs.d/utils/color-theme/")
(add-to-list 'load-path "~/.emacs.d/modes/")
(add-to-list 'load-path "~/.emacs.d/modes/haskell-mode/")

;; --------------------
;; === Haskell Mode ===
;; --------------------

(require 'haskell-mode-autoloads)
(add-to-list 'Info-default-directory-list "~/.emacs.d/modes/haskell-mode/") 
(add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
(add-hook 'haskell-mode-hook 'turn-on-haskell-indent)
(autoload 'haskell-mode "haskell-mode" "..." t)
(setq haskell-program-name "/usr/loacl/bin/ghci")

;; --------------------------
;; === reset default face ===
;; --------------------------

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:height 180 :width normal :family "DejaVu Sans Mono"))))
 '(agda2-highlight-coinductive-constructor-face ((t (:foreground "DarkGoldenrod2"))))
 '(agda2-highlight-datatype-face ((t (:foreground "DarkGoldenrod2"))))
 '(agda2-highlight-function-face ((t (:foreground "DarkGoldenrod2"))))
 '(agda2-highlight-inductive-constructor-face ((t (:foreground "DarkGoldenrod2"))))
 '(agda2-highlight-keyword-face ((t (:foreground "SteelBlue"))))
 '(agda2-highlight-module-face ((t (:foreground "violet"))))
 '(agda2-highlight-number-face ((t (:foreground "violet"))))
 '(agda2-highlight-postulate-face ((t (:foreground "DarkGoldenrod2"))))
 '(agda2-highlight-primitive-face ((t (:foreground "LemonChiffon2"))))
 '(agda2-highlight-primitive-type-face ((t (:foreground "LemonChiffon2"))))
 '(agda2-highlight-record-face ((t (:foreground "DarkGoldenrod2"))))
 '(agda2-highlight-string-face ((t (:foreground "violet"))))
 '(agda2-highlight-symbol-face ((((background light)) (:foreground "gray25")) (((background dark)) (:foreground "gray50"))))
 '(font-lock-comment-face ((t (:foreground "LightPink2"))))
 '(highlight ((((class color) (min-colors 88) (background dark)) :background "light sky blue" :foreground "black"))))

;; -------------------------------
;; === setup unicode  mapping ===
;; -------------------------------

(require 'unicode-fonts)

;; -------------------------------------------------
;; !WARNING! !WARNING! !WARNING! !WARNING! !WARNING! 
;; -------------------------------------------------
;; Since the unicode-fonts will override (almost) 
;; whole unicode mapping, it will spend a lot of 
;; time to open emacs. I setup some custom variables 
;; for speeding up. 

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(agda2-include-dirs (quote ("." "/Users/jaiyalas/agdaLib/lib-0.7/src" "/Users/jaiyalas/agdaLib/LightweightFreeTheorems" "/Users/jaiyalas/agdaLib/AoPA")))
 '(haskell-program-name "/usr/local/bin/ghci")
 '(safe-local-variable-values (quote ((require-final-newline . t) (mangle-whitespace . t))))
 '(tab-stop-list (quote (4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100 104 108 112 116 120)))
 '(unicode-fonts-existence-checks (quote none))
 '(unicode-fonts-ignore-overrides (quote t))
 '(unicode-fonts-restrict-to-fonts (quote ("Aegean" "Aegyptus" "Akkadian" "Code2000" "Code2001" "DejaVu Sans Mono" "DejaVu Sans" "Geeza Pro" "Osaka" "SimHei" "Symbola" "Quivira" "Apple Symbols" "Cambria Math"))))

(unicode-fonts-setup)

;; ------------------------
;; === Using elscreen ===
;; ------------------------

(load "elscreen" "ElScreen" t)
(load "elscreen-speedbar" "ElScree-Speedbar" t)

(setq mac-option-key-is-meta t)

;; work with elscreen 
(global-set-key [s-left]    'elscreen-previous)
(global-set-key [s-M-left]  'elscreen-previous)
(global-set-key [s-right]   'elscreen-next)
(global-set-key [s-M-right] 'elscreen-next)

(global-set-key [s-up]      'elscreen-kill) 
(global-set-key [s-down]    'save-buffer)

(global-set-key [s-return]       'elscreen-find-file) 

;; -------------------
;; === color theme ===
;; -------------------

(require 'color-theme)
(color-theme-initialize)
(eval-after-load "color-theme" '(color-theme-twilight))

;; -------------------
;; === Line Number ===
;; -------------------

; (if (eq window-system 'X) 
;   ((require 'linum)
;    (add-hook 'find-file-hook (lambda () (linum-mode 1)))
;    (global-linum-mode 1))
; )
(global-linum-mode 1)

;; ----------------------------
;; === TeX as input method  ===
;; ----------------------------

(set-input-method 'TeX)

;; ---------------------
;; === markdown mode ===
;; ---------------------

(autoload 'markdown-mode "markdown-mode"
   "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))

;; ----------------------
;; === Directory tree ===
;; ----------------------

(require 'tree-mode)
(require 'windata)
(require 'dirtree)
(global-set-key "\C-o" 'dirtree-show)



(defun ep-dirtree ()
  (interactive)
  (dirtree-in-buffer eproject-root t))

;; -------------------
;; === Prolog mode ===
;; -------------------
(autoload 'run-prolog "prolog" "Start a Prolog sub-process." t)
(autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t)
(autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t)
(setq prolog-system 'swi)
(setq auto-mode-alist (append '(("\\.pl$" . prolog-mode)
  ("\\.m$" . mercury-mode)) auto-mode-alist))

;; -------------------
;; === Hamlet Mode ===
;; -------------------

(require 'hamlet-mode)

;; -----------------
;; === agda mode ===
;; -----------------

(load-file "~/.emacs.d/load-agda.el")


